{"version":3,"sources":["common/EventBus.ts","config/settings.ts","services/auth.service.ts","components/Login.tsx","components/Register.tsx","components/Home.tsx","components/Profile.tsx","utils/ipfs.ts","services/nft.service.ts","components/NftMint.tsx","services/wallet.service.ts","components/Wallet.tsx","components/NftCard.tsx","components/Gallery.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["eventBus","on","event","callback","document","addEventListener","e","dispatch","data","dispatchEvent","CustomEvent","detail","remove","removeEventListener","settings","BACKEND_URL","NAV_LINKS","path","label","public","validateAuth","response","status","getCurrentUser","userStr","localStorage","getItem","JSON","parse","authHeader","user","token","Authorization","Login","history","useState","loading","setLoading","message","setMessage","validationSchema","Yup","shape","email","required","password","className","src","alt","initialValues","onSubmit","formValue","axios","post","then","setItem","stringify","login","push","window","location","reload","error","htmlFor","name","type","component","disabled","role","Register","successful","setSuccessful","test","val","toString","length","register","Home","Profile","currentUser","defaultValue","toUpperCase","_id","createdAt","makeUrl","cid","flag","split","mint","formdata","auth","headers","NftMint","useForm","handleSubmit","reset","file","setFile","success","setSuccess","useDropzone","accept","onDrop","acceptedFiles","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","a","alert","FormData","append","description","undefined","catch","style","borderRadius","id","placeholder","generateWallet","Wallet","wallet","setWallet","show","setShow","init","useCallback","get","getWallet","console","warn","useEffect","handleClick","publicKey","privateKey","onClick","prev","NftCard","nft","metadata","setMetadata","ipnft","width","height","image","minHeight","Gallery","nfts","setNfts","map","nftId","App","setCurrentUser","AuthService","EventBus","logOut","removeItem","href","to","link","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","refreshToken","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3b1e2b65.chunk.js","sourcesContent":["const eventBus = {\r\n  on(event: string, callback: EventListener) {\r\n    document.addEventListener(event, (e) => callback(e));\r\n  },\r\n  dispatch(event: string, data?: any) {\r\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\r\n  },\r\n  remove(event: string, callback: EventListener) {\r\n    document.removeEventListener(event, callback);\r\n  },\r\n};\r\n\r\nexport default eventBus;\r\n","const settings = {\r\n  BACKEND_URL: \"\",\r\n  NAV_LINKS: [\r\n    { path: \"/home\", label: \"Home\", public: true },\r\n    { path: \"/wallet\", label: \"Wallet\", public: false },\r\n    { path: \"/mint\", label: \"Mint\", public: false },\r\n    { path: \"/gallery\", label: \"NFT Gallery\", public: false },\r\n  ],\r\n};\r\n\r\nexport default settings;\r\n","import axios, { AxiosResponse } from \"axios\";\r\n\r\nimport eventBus from \"../common/EventBus\";\r\nimport settings from \"../config/settings\";\r\nimport { IUserWithToken } from \"../types/user\";\r\n\r\nexport const register = (email: string, password: string) => {\r\n  return axios.post(`${settings.BACKEND_URL}/auth/register`, {\r\n    email,\r\n    password,\r\n  });\r\n};\r\n\r\nexport const login = (email: string, password: string) => {\r\n  return axios\r\n    .post(`${settings.BACKEND_URL}/auth/loginWithEmail`, {\r\n      email,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.token) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    });\r\n};\r\n\r\nexport const refreshToken = () => {\r\n  const user: IUserWithToken = getCurrentUser();\r\n  const auth = authHeader();\r\n\r\n  if (!user) return undefined;\r\n\r\n  return axios\r\n    .post(\r\n      `${settings.BACKEND_URL}/auth/refreshToken`,\r\n      {\r\n        token: user.token,\r\n      },\r\n      { headers: { ...auth } }\r\n    )\r\n    .then((response) => {\r\n      if (response.data.token) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n      }\r\n\r\n      return response.data;\r\n    })\r\n    .catch((error) => {\r\n      eventBus.dispatch(\"logout\");\r\n\r\n      return false;\r\n    });\r\n};\r\n\r\nexport const validateAuth = (response: AxiosResponse) => {\r\n  response.status === 401 && eventBus.dispatch(\"logout\");\r\n  return response.data;\r\n};\r\n\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nexport const getCurrentUser = () => {\r\n  const userStr = localStorage.getItem(\"user\");\r\n  if (userStr) return JSON.parse(userStr);\r\n\r\n  return null;\r\n};\r\n\r\nexport const authHeader = () => {\r\n  const userStr = localStorage.getItem(\"user\");\r\n  let user = null;\r\n  if (userStr) user = JSON.parse(userStr);\r\n\r\n  if (user && user.token) {\r\n    return { Authorization: \"Bearer \" + user.token };\r\n  } else {\r\n    return { Authorization: \"\" };\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { login } from \"../services/auth.service\";\r\nimport { IRouterProps } from \"../types/router\";\r\n\r\nconst Login: React.FC<RouteComponentProps<IRouterProps>> = ({ history }) => {\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [message, setMessage] = useState<string>(\"\");\r\n\r\n  const initialValues: {\r\n    email: string;\r\n    password: string;\r\n  } = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string().required(\"This field is required!\"),\r\n    password: Yup.string().required(\"This field is required!\"),\r\n  });\r\n\r\n  const handleLogin = (formValue: { email: string; password: string }) => {\r\n    const { email, password } = formValue;\r\n\r\n    setMessage(\"\");\r\n    setLoading(true);\r\n\r\n    login(email, password).then(\r\n      () => {\r\n        history.push(\"/profile\");\r\n        window.location.reload();\r\n      },\r\n      (error) => {\r\n        setLoading(false);\r\n        setMessage(error.response.data.message || error.message);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleLogin}\r\n        >\r\n          <Form>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email</label>\r\n              <Field name=\"email\" type=\"text\" className=\"form-control\" />\r\n              <ErrorMessage\r\n                name=\"email\"\r\n                component=\"div\"\r\n                className=\"alert alert-danger\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Field name=\"password\" type=\"password\" className=\"form-control\" />\r\n              <ErrorMessage\r\n                name=\"password\"\r\n                component=\"div\"\r\n                className=\"alert alert-danger\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={loading}\r\n              >\r\n                {loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Form>\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { IUser } from \"../types/user\";\r\nimport { register } from \"../services/auth.service\";\r\n\r\nconst Register: React.FC = () => {\r\n  const [successful, setSuccessful] = useState<boolean>(false);\r\n  const [message, setMessage] = useState<string>(\"\");\r\n\r\n  const initialValues: IUser = { email: \"\", password: \"\" };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"This is not a valid email.\")\r\n      .required(\"This field is required!\"),\r\n    password: Yup.string()\r\n      .test(\r\n        \"len\",\r\n        \"The password must be between 6 and 40 characters.\",\r\n        (val: any) =>\r\n          val && val.toString().length >= 6 && val.toString().length <= 40\r\n      )\r\n      .required(\"This field is required!\"),\r\n  });\r\n\r\n  const handleRegister = (formValue: IUser) => {\r\n    const { email, password } = formValue;\r\n\r\n    register(email, password).then(\r\n      () => {\r\n        setMessage(\"Successfully registered, You can login now!\");\r\n        setSuccessful(true);\r\n      },\r\n      (error) => {\r\n        setMessage(error.response.data.message || error.message);\r\n        setSuccessful(false);\r\n      }\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-md-12\">\r\n      <div className=\"card card-container\">\r\n        <img\r\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n          alt=\"profile-img\"\r\n          className=\"profile-img-card\"\r\n        />\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleRegister}\r\n        >\r\n          <Form>\r\n            {!successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\"> Email </label>\r\n                  <Field name=\"email\" type=\"email\" className=\"form-control\" />\r\n                  <ErrorMessage\r\n                    name=\"email\"\r\n                    component=\"div\"\r\n                    className=\"alert alert-danger\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\"> Password </label>\r\n                  <Field\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"password\"\r\n                    component=\"div\"\r\n                    className=\"alert alert-danger\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button type=\"submit\" className=\"btn btn-primary btn-block\">\r\n                    Sign Up\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    successful ? \"alert alert-success\" : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {message}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </Form>\r\n        </Formik>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\n\r\nconst Home: React.FC = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"jumbotron\">\r\n        <h3>Hola!</h3>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nimport { getCurrentUser } from \"../services/auth.service\";\r\n\r\nconst Profile: React.FC = () => {\r\n  const currentUser = getCurrentUser();\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card card-container\">\r\n        <div className=\"form-group\">\r\n          <label>Email:</label>\r\n          <input\r\n            defaultValue={currentUser.user.email.toUpperCase()}\r\n            className=\"form-control\"\r\n            disabled\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>User ID:</label>\r\n          <input\r\n            defaultValue={currentUser.user._id}\r\n            className=\"form-control\"\r\n            disabled\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Joined:</label>\r\n          <input\r\n            defaultValue={currentUser.user.createdAt}\r\n            className=\"form-control\"\r\n            disabled\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","export const makeUrl = (cid: string, flag?: boolean) =>\r\n  flag\r\n    ? `https://ipfs.io/ipfs/${cid.split(\"ipfs://\")[1]}`\r\n    : `https://ipfs.io/ipfs/${cid}/metadata.json`;\r\n","import axios from \"axios\";\r\n\r\nimport settings from \"../config/settings\";\r\nimport { makeUrl } from \"../utils/ipfs\";\r\nimport { authHeader, validateAuth } from \"./auth.service\";\r\n\r\nexport const mint = (formdata: any) => {\r\n  const auth = authHeader();\r\n\r\n  return axios\r\n    .post(`${settings.BACKEND_URL}/nftmint`, formdata, {\r\n      headers: { ...auth },\r\n    })\r\n    .then(validateAuth);\r\n};\r\n\r\nexport const getNfts = () => {\r\n  return axios.get(`${settings.BACKEND_URL}/nftmint`);\r\n};\r\n\r\nexport const getMetadata = (cid: string) => {\r\n  return axios.get(`${makeUrl(cid)}`);\r\n};\r\n","import { useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nimport { mint } from \"../services/nft.service\";\r\nimport { MintFormValuesType } from \"../types/form\";\r\n\r\nconst NftMint = () => {\r\n  const { register, handleSubmit, reset } = useForm<MintFormValuesType>();\r\n\r\n  const [file, setFile] = useState<File & { preview: string } | undefined>();\r\n  const [message, setMessage] = useState<string>();\r\n  const [success, setSuccess] = useState<boolean>();\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    accept: {\r\n      \"image/*\": [\".jpeg\", \".png\", \".txt\"],\r\n    },\r\n    onDrop: (acceptedFiles) => {\r\n      setFile(\r\n        Object.assign(acceptedFiles[0], {\r\n          preview: URL.createObjectURL(acceptedFiles[0]),\r\n        })\r\n      );\r\n    },\r\n  });\r\n\r\n  const onSubmit = handleSubmit(async (data) => {\r\n    if (!file) {\r\n      return window.alert(\"Please select the image.\");\r\n    }\r\n\r\n    const formdata = new FormData();\r\n    formdata.append(\"name\", data.name);\r\n    formdata.append(\"description\", data.description);\r\n    formdata.append(\"file\", file);\r\n\r\n    reset();\r\n    setFile(undefined);\r\n\r\n    setSuccess(false);\r\n    mint(formdata)\r\n      .then((response) => {\r\n        setSuccess(true);\r\n      })\r\n      .catch((error) => {\r\n        setSuccess(undefined);\r\n        setMessage(error.response.data.message || error.message);\r\n      });\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <div className=\"card w-50\">\r\n        <div className=\"form-group\">\r\n          {message && (\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              {message}\r\n            </div>\r\n          )}\r\n          {success && (\r\n            <div className=\"alert alert-success\" role=\"alert\">\r\n              Successfully minted!\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {success === false ? (\r\n          <p>Minting now, Wait a second...</p>\r\n        ) : (\r\n          <>\r\n            <div className=\"border rounded mb-2 p-2\" {...getRootProps()}>\r\n              <input {...getInputProps()} />\r\n              {file ? (\r\n                <p>{file.name}</p>\r\n              ) : (\r\n                <>\r\n                  <p>Drag and drop a file here, or click to select file</p>\r\n                  <p>\r\n                    <em>(Only *.jpeg, *.png, *.txt files will be accepted)</em>\r\n                  </p>\r\n                </>\r\n              )}\r\n            </div>\r\n\r\n            <aside>\r\n              {file && (\r\n                <img\r\n                  src={file.preview}\r\n                  alt={file.name}\r\n                  className=\"w-100 mb-2\"\r\n                  style={{\r\n                    borderRadius: \"0.5rem\",\r\n                  }}\r\n                />\r\n              )}\r\n            </aside>\r\n\r\n            <input\r\n              id=\"outlined-name\"\r\n              placeholder=\"Name\"\r\n              className=\"border rounded mb-2 p-2\"\r\n              {...register(\"name\", { required: true })}\r\n            />\r\n            <textarea\r\n              id=\"outlined-description\"\r\n              placeholder=\"Description\"\r\n              className=\"border rounded mb-2 p-2\"\r\n              {...register(\"description\", { required: true })}\r\n            />\r\n\r\n            <button type=\"submit\" className=\"btn btn-success\">\r\n              Mint\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NftMint;\r\n","import axios from \"axios\";\r\n\r\nimport settings from \"../config/settings\";\r\nimport { authHeader, validateAuth } from \"./auth.service\";\r\n\r\nexport const generateWallet = () => {\r\n  const auth = authHeader();\r\n\r\n  return axios\r\n    .post(\r\n      `${settings.BACKEND_URL}/wallet`,\r\n      {},\r\n      {\r\n        headers: { ...auth },\r\n      }\r\n    )\r\n    .then(validateAuth);\r\n};\r\n\r\nexport const getWallet = () => {\r\n  const auth = authHeader();\r\n\r\n  return axios.get(`${settings.BACKEND_URL}/wallet`, { headers: { ...auth } });\r\n};\r\n","import { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport { generateWallet, getWallet } from \"../services/wallet.service\";\r\nimport { WalletType } from \"../types/wallet\";\r\n\r\nconst Wallet = () => {\r\n  const [wallet, setWallet] = useState<WalletType>();\r\n  const [message, setMessage] = useState<string>();\r\n  const [show, setShow] = useState<boolean>(false);\r\n\r\n  const init = useCallback(() => {\r\n    getWallet()\r\n      .then((response) => {\r\n        setWallet(response.data);\r\n      })\r\n      .catch((error) =>\r\n        console.warn(error.response.data.message || error.message)\r\n      );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, [init]);\r\n\r\n  const handleClick = async () => {\r\n    generateWallet()\r\n      .then((response) => {\r\n        setWallet(response);\r\n      })\r\n      .catch((error) => {\r\n        setMessage(error.response.data.message || error.message);\r\n      });\r\n  };\r\n\r\n  const handleShowToggle = () => {\r\n    setShow((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className=\"card w-50\">\r\n      {message && (\r\n        <div className=\"form-group\">\r\n          <div className=\"alert alert-danger\" role=\"alert\">\r\n            {message}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {wallet ? (\r\n        <>\r\n          <div className=\"form-group\">\r\n            <label>Public Key</label>\r\n            <input className=\"form-control\" defaultValue={wallet.publicKey} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Private Key</label>\r\n            <input\r\n              type={show ? \"text\" : \"password\"}\r\n              className=\"form-control\"\r\n              defaultValue={wallet.privateKey}\r\n            />\r\n          </div>\r\n          <button className=\"btn btn-info\" onClick={handleShowToggle}>\r\n            {show ? \"Hide Private Key\" : \"Show Private Key\"}\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <p>Click the button below to create your own wallet!</p>\r\n          <button className=\"btn btn-success\" onClick={handleClick}>\r\n            Generate Wallet\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Wallet;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\n\r\nimport { MetadataType, NftType } from \"../types/nft\";\r\nimport { makeUrl } from \"../utils/ipfs\";\r\nimport { getMetadata } from \"../services/nft.service\";\r\n\r\nconst NftCard = ({ nft }: { nft: NftType }) => {\r\n  const [metadata, setMetadata] = useState<MetadataType | boolean>();\r\n  const [message, setMessage] = useState<string>();\r\n\r\n  const init = useCallback(() => {\r\n    if (nft.data.type === \"image\") {\r\n      getMetadata(nft.data.ipnft)\r\n        .then((response) => {\r\n          setMetadata(response.data);\r\n        })\r\n        .catch((error) => {\r\n          setMetadata(false);\r\n          setMessage(error.response.data.message || error.message);\r\n        });\r\n    }\r\n  }, [nft]);\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, [init]);\r\n\r\n  return (\r\n    <div className=\"col-lg=3 col-md-4 col-sm-6 col-xs-12\">\r\n      <div className=\"card mt-2\">\r\n        {message && (\r\n          <div className=\"form-group\">\r\n            <div className=\"alert alert-danger\" role=\"alert\">\r\n              {message}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {nft.data.type === \"image\" ? (\r\n          !metadata ? (\r\n            <p>Loading from IPFS...</p>\r\n          ) : (\r\n            typeof metadata === \"object\" && (\r\n              <>\r\n                <LazyLoadImage\r\n                  alt={metadata.name}\r\n                  width={\"100%\"}\r\n                  height={\"100%\"}\r\n                  src={makeUrl(metadata.image, true)}\r\n                />\r\n                <div>Name: {metadata.name}</div>\r\n                <div>Description: {metadata.description}</div>\r\n              </>\r\n            )\r\n          )\r\n        ) : (\r\n          <>\r\n            <textarea\r\n              defaultValue={nft.data.data.toString()}\r\n              style={{ minHeight: 218 }}\r\n              disabled\r\n            />\r\n            <div>Name: {nft.data.name}</div>\r\n            <div>Description: {nft.data.description}</div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NftCard;\r\n","import { useCallback, useEffect, useState } from \"react\";\r\n\r\nimport NftCard from \"./NftCard\";\r\nimport { getNfts } from \"../services/nft.service\";\r\nimport { NftType } from \"../types/nft\";\r\n\r\nconst Gallery = () => {\r\n  const [nfts, setNfts] = useState<Array<NftType>>([]);\r\n\r\n  const init = useCallback(() => {\r\n    getNfts()\r\n      .then((response) => {\r\n        setNfts(response.data);\r\n      })\r\n      .catch((error) =>\r\n        console.warn(error.response.data.message || error.message)\r\n      );\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    init();\r\n  }, [init]);\r\n\r\n  return (\r\n    <div className=\"col-md-12 row d-grid gap-2\">\r\n      {nfts.map((nft) => (\r\n        <NftCard key={`nft-card-${nft.nftId}`} nft={nft} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\n\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\nimport Home from \"./components/Home\";\r\nimport Profile from \"./components/Profile\";\r\nimport NftMint from \"./components/NftMint\";\r\nimport Wallet from \"./components/Wallet\";\r\nimport Gallery from \"./components/Gallery\";\r\nimport * as AuthService from \"./services/auth.service\";\r\nimport { IUserWithToken } from \"./types/user\";\r\nimport EventBus from \"./common/EventBus\";\r\n\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport settings from \"./config/settings\";\r\n\r\nconst App: React.FC = () => {\r\n  const [currentUser, setCurrentUser] = useState<IUserWithToken>();\r\n\r\n  useEffect(() => {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    user && setCurrentUser(user);\r\n\r\n    EventBus.on(\"logout\", logOut);\r\n\r\n    return () => {\r\n      EventBus.remove(\"logout\", logOut);\r\n    };\r\n  }, []);\r\n\r\n  const logOut = () => {\r\n    AuthService.logout();\r\n    setCurrentUser(undefined);\r\n    window.location.href = \"/login\";\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n        <Link to={\"/\"} className=\"navbar-brand\">\r\n          NFT mint\r\n        </Link>\r\n        <div className=\"navbar-nav mr-auto\">\r\n          {settings.NAV_LINKS.map(\r\n            (link) =>\r\n              (link.public || currentUser) && (\r\n                <li key={`nav-link-${link.label}`} className=\"nav-item\">\r\n                  <Link to={link.path} className=\"nav-link\">\r\n                    {link.label}\r\n                  </Link>\r\n                </li>\r\n              )\r\n          )}\r\n        </div>\r\n\r\n        {currentUser ? (\r\n          <div className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/profile\"} className=\"nav-link\">\r\n                {currentUser.user.email}\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\r\n                LogOut\r\n              </a>\r\n            </li>\r\n          </div>\r\n        ) : (\r\n          <div className=\"navbar-nav ml-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/login\"} className=\"nav-link\">\r\n                Login\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/register\"} className=\"nav-link\">\r\n                Sign Up\r\n              </Link>\r\n            </li>\r\n          </div>\r\n        )}\r\n      </nav>\r\n\r\n      <div className=\"container mt-3\">\r\n        <Switch>\r\n          <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n          <Route exact path=\"/login\" component={Login} />\r\n          <Route exact path=\"/register\" component={Register} />\r\n          {currentUser && (\r\n            <>\r\n              <Route exact path=\"/profile\" component={Profile} />\r\n              <Route path=\"/wallet\" component={Wallet} />\r\n              <Route path=\"/mint\" component={NftMint} />\r\n              <Route path=\"/gallery\" component={Gallery} />\r\n            </>\r\n          )}\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { refreshToken } from \"./services/auth.service\";\r\n\r\nrefreshToken();\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}